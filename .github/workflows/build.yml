name: Build

on: [workflow_dispatch]

jobs:
  build-web:
    environment: prod

    runs-on: ubuntu-22.04

    timeout-minutes: 30

    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - name: Use Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Clean Docker cache
        run: |
          docker system prune -a -f --volumes
          df -h # Optional: Check available storage

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Output
      - uses: actions/upload-artifact@v4
        with:
          name: Build
          path: build

  build-android:
    environment: prod

    runs-on: ubuntu-22.04

    timeout-minutes: 30

    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - name: Use Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Clean Docker cache
        run: |
          echo "Before docker prune:"
          df -h
          docker system prune -a -f --volumes
          echo "After docker prune:"
          df -h

      - name: Check disk space before Unity Build
        run: |
          echo "--- Disk space before Unity build ---"
          df -h
          echo "--- Sizes of common Unity/Docker paths before build ---"
          # Diese Pfade sind typisch für game-ci/unity-builder auf Ubuntu-Runnern
          du -sh /opt/unity || echo "/opt/unity not found or empty"
          du -sh /var/lib/docker || echo "/var/lib/docker not found or empty"
          du -sh /github/workspace || echo "/github/workspace not found or empty"
          du -sh /tmp || echo "/tmp not found or empty" # Temporäre Dateien
        continue-on-error: true # Führe den Rest des Jobs auch bei Fehlern hier aus

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: Android
          # Sehr wichtig: Füge diesen CacheKey hinzu!
          cacheKey: "Unity-Editor-Android-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}"
          # Optional: Wenn du eine spezifische, als kleiner bekannte Version verwenden möchtest
          # unityVersion: "2022.3.10f1"

      - name: Check disk space after Unity Build attempt
        if: always() # Wichtig: Auch bei Fehlern ausführen
        run: |
          echo "--- Disk space after Unity build attempt ---"
          df -h
          echo "--- Sizes of common Unity/Docker paths after build attempt ---"
          du -sh /opt/unity || echo "/opt/unity not found or empty"
          du -sh /var/lib/docker || echo "/var/lib/docker not found or empty"
          du -sh /github/workspace || echo "/github/workspace not found or empty"
          du -sh /tmp || echo "/tmp not found or empty"
        continue-on-error: true